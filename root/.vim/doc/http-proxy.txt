vim:ft=help

*http-proxy*

WSL启动http proxy server ~

*squid*

apt install squid

运行squid:

squid --foreground
或者
sudo systemctl start squid

squid默认配置文件 `/etc/squid/squid.conf`

*squid禁止访问部分网址*

squid的规则是从上到下开始匹配的，匹配到第一条规则即结束。

黑名单
>squid
    # 在TAG: acl中添加
    acl Blocked_URL_by_jiangyinzuo dstdomain .baidu.com .qq.com
    # 在TAG: http_access中添加
    http_access deny Blocked_URL_by_jiangyinzuo
<

白名单
>squid
    # 白名单 ACL
    acl whitelist dstdomain .example.com
    acl whitelist dstdomain .github.com
    acl whitelist dstdomain .google.com

    # 拒绝非白名单
    http_access deny !whitelist
<


然后更新配置文件
sudo systemctl restart squid

http转发到能连外网的跳板机 ~

在跳板机中后台(tmux)执行
>
	ssh -NR 3128:localhost:3128 kiwi
<

http转发到个人电脑 ~

假设目标机器为kiwi-nf，跳板机为cherry01，个人电脑启动squid，端口号为3128.
服务器http proxy也转发到3128
>
	Host kiwi-nf
	HostName 10.208.130.1
	User jiangyinzuo
	Port 3527
	# 防止长时间断连
	ServerAliveInterval 60
	# ProxyJump grape
	ProxyJump cherry01
	# 服务器端口:本地端口
	RemoteForward 3128 localhost:3128
<

Warning: remote port forwarding failed for listen port 3128 ~
>
	sudo netstat -tulnp | grep 3128
<
找到占用端口的进程（可能是之前的ssh异常退出），然后kill

查看日志
>bash
    sudo tail -f /var/log/squid/access.log
    sudo tail -f /var/log/squid/cache.log
<

bash环境变量 ~

export http_proxy=http://localhost:3128
export https_proxy=http://localhost:3128

apt源 ~

/etc/apt/apt.conf.d/proxy.conf

>
	# modified by jiangyinzuo 2023/12/12
	Acquire::http::Proxy "http://localhost:3128";
	Acquire::https::Proxy "http://localhost:3128";
<

|docker设置http代理|

pip http代理 ~

pip3 install pandas --proxy=localhost:3128

Java Maven ~

https://maven.apache.org/guides/mini/guide-proxies.html

~/.m2/settings.xml
>xml
    <settings>
      <proxies>
       <proxy>
          <id>example-proxy</id>
          <active>true</active>
          <protocol>http</protocol>
          <host>localhost</host>
          <port>3128</port>
        </proxy>
      </proxies>
    </settings>
<
