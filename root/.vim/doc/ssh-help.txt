vim:ft=help

*ssh-help*

别再笨笨地使用SSH了 - Pavinberg的文章 - 知乎 https://zhuanlan.zhihu.com/p/716963359

*ssh生成key*
1) ssh-keygen -t rsa -C '邮件地址@youremail.com'
2) cat ~/.ssh/id_rsa.pub
3) 将公钥复制到远程服务器
>
  ssh-copy-id username@remote_host
<


*ssh免yes登录* *scp免yes登录* *ssh-strict-hostkey-checking*
用于第一次批量登录大量服务器

sudo ssh <hostname> -o strictHostKeyChecking=no

*sshpass免密码登录*
sshpass -f password_file ssh <hostname>

*scp复制文件*
>
	scp .vimrc grape:
<
*scp打开文件*
>
	vim scp://grape/~/.vimrc
<

*ssh端口转发*

本地转发、远程转发和动态转发 ~

本地转发：ssh -L ~
在本地浏览器打开远程服务器上部署的网站。
在远程服务器启动一个http server，localhost:8080。本地浏览器打开localhost:8080后，访问请求被转发到
远程服务器的localhost:8080。

远程转发：ssh -R ~
远程服务器访问本地电脑上的服务（如squid http proxy server）
ssh -NR 3128:localhost:3128 kiwi

该命令 `ssh -NR 3128:localhost:3128 kiwi` 使用 SSH (Secure Shell) 执行了远程端口转发。让我们分解这个命令，以便更好地理解其功能：

1. ssh: 这是启动SSH客户端程序的命令，用于安全地连接到远程服务器。

2. -N: 这个选项告诉SSH客户端不执行任何远程命令。这常用于只需建立端口转发的情况。

3. -R: 这是远程端口转发的选项。与本地端口转发 (`-L`) 相反，远程端口转发允许将远程机器上的端口转发到本地机器的端口。

4. 3128:localhost:3128: 这部分指定了端口转发的具体细节。`3128:localhost:3128` 的意思是将远程机器上的3128端口转发到本地机器上的3128端口。具体来说，这意味着在远程机器（在该命令中是连接的目标服务器 `kiwi`）上的3128端口上接收的所有数据都会被转发到执行此命令的本地计算机上的3128端口。

5. kiwi: 这是您要连接的远程SSH服务器的主机名或IP地址。

综上所述，这个命令建立了一个SSH会话，用于将远程服务器（kiwi`）上的3128端口的流量转发到执行命令的本地机器上的3128端口。这种类型的端口转发通常用于将请求或服务从远程服务器重定向到本地计算机，或用于穿透防火墙的设置。

动态转发：ssh -D ~

在本地浏览器上通过“Proxy Switch Omega”代理插件 https://chrome.google.com/webstore/detail/padekgcemlokbadohgkifijomclgjgif
设置好代理（SOCKS5协议，localhost，动态转发端口号）
之后浏览器的任何网页访问请求都通过远程服务器访问。可以用于访问远程服务器才能访问的各种网址
如https://gw.ict.ac.cn，内网gitlab等

该命令 `ssh -fCD localhost:3128 grape -N` 在 SSH (Secure Shell) 中执行了几个操作。让我们分解这个命令，以便更好地理解其功能：

1. ssh: 这是启动SSH客户端程序的命令，用于安全地连接到远程服务器。

2. -f: 这个选项让SSH在后台运行。即，SSH会在建立连接后将自身放到后台运行。

3. -C: 启用压缩。SSH会尝试压缩传输的数据，这在带宽有限的情况下有助于提高传输速度。

4. -D localhost:3128: 这是设置动态端口转发的部分。`-D` 选项指定了一个本地的“动态”应用程序级端口转发。在这种情况下，SSH客户端会在本地机器的3128端口上创建一个 SOCKS 代理服务器。您可以将浏览器或其他支持SOCKS代理的程序配置为使用这个代理，从而所有通过这个代理的流量都会被安全地转发到SSH服务器，然后从那里出到Internet。

5. grape: 这是您要连接的远程SSH服务器的主机名或IP地址。在这个例子中，它看起来像是一个主机名。

6. -N: 这个选项告诉SSH不执行任何命令，不启动shell。这在你只需要端口转发时非常有用，而不是在远程机器上运行命令。

综上所述，这个命令创建了一个在后台运行的SSH会话，它在本地机器上的3128端口上设置了一个SOCKS代理，所有通过这个代理的流量都会安全地转发到名为“grape”的远程服务器。这通常用于安全的网络流量转发或绕过网络限制。


~/.vim/doc/port3128.md
-------------------------------------------------------------------------------
*ssh-x11转发远程使用GUI程序*
*x11转发共享clipboard*

https://blog.csdn.net/weixin_44966641/article/details/120365459

服务器端/etc/ssh/sshd_config ~
>
	X11Forwarding yes
	X11DisplayOffset 10
	X11UseLocalhost yes
<

sudo systemctl restart sshd.service

Linux客户端/etc/ssh/ssh_config ~
>
	ForwardAgent yes
	ForwardX11 yes
	ForwardX11Trusted yes
<

ssh -X jiangyinzuo@kiwi

NOTE: 服务器端vim初始化X11 clipboard，共享剪贴板，大概需要756ms，影响性能。
>
	865.595  756.019: setup clipboard
<
-------------------------------------------------------------------------------
GatewayPorts ~

当在SSH服务器的配置文件`sshd_config`中设置`GatewayPorts`为`yes`时，它允许SSH客户端从任何IP地址进行端口转发，而不仅仅是本地或局域网内的地址。这意味着SSH客户端可以请求SSH服务器将某个端口转发到客户端指定的远程主机和端口上。

例子说明 ~

假设有以下网络和主机配置：

- SSH服务器位于IP地址为`192.168.1.100`的机器上，且SSH服务运行在默认端口`22`。
- 客户端位于IP地址为`10.0.0.5`的机器上。
- 需要访问的远程服务位于IP地址为`203.0.113.5`的机器上，该服务运行在端口`8080`。

在SSH服务器的`sshd_config`文件中设置`GatewayPorts`为`yes`：

>
	GatewayPorts yes
<

然后，客户端使用SSH客户端命令行工具发起端口转发请求：

>
	ssh -g -L 8080:203.0.113.5:8080 user@192.168.1.100
<

这里的命令参数解释如下：

- `-g`：允许使用网关端口转发。
- `-L`：指定本地端口转发。格式为`[本地端口]:[远程主机]:[远程端口]`。
  - `8080`：客户端机器上用于转发的本地端口。
  - `203.0.113.5`：需要访问的远程服务的IP地址。
  - `8080`：远程服务的端口。
- `user@192.168.1.100`：SSH服务器的登录信息。

效果 ~

执行上述命令后，客户端机器上的`10.0.0.5:8080`端口将被转发到远程服务`203.0.113.5:8080`。这意味着，客户端可以通过访问`http://10.0.0.5:8080`来访问远程服务，而数据实际上是通过SSH服务器`192.168.1.100`转发的。

安全考虑 ~

开启`GatewayPorts`为`yes`会使得SSH服务器对外部网络暴露端口转发功能，这可能会带来安全风险。例如，恶意用户可能会利用此功能来绕过防火墙规则，访问内部网络中的服务。因此，在生产环境中使用时，应确保只有可信用户能够发起端口转发请求，并且应监控和审计端口转发活动。
-------------------------------------------------------------------------------
*sftp-server*

~/.vim/doc/sftp-server.md

某些特殊的sftp服务器(2024年初某厂)，居然只能sftp传文件，不能scp传文件。

===============================================================================
ssh替代：mosh

mosh和ET都需要开放新的端口。

mosh - 一款替代SSH的UDP远程终端软件 - 古古今今的文章 - 知乎
https://zhuanlan.zhihu.com/p/28414523

EternalTerminal https://github.com/MisterTea/EternalTerminal

搭环境考验：ssh网络连接慢的情况下使用vim ~

连接阿里云的印度尼西亚服务器，会有卡顿，会时常断连，如何解决？

|slow-terminal|

https://www.reddit.com/r/vim/comments/m2cksk/askreddit_how_do_you_deal_with_ssh_latency_when/
