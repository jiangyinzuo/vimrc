vim:set ft=help:

*python-env*

----------------------------------------------------------------------------
*编译安装python3.8*

2024年生产环境，CentOS7.1上的python版本为3.6.8，比较阴间。
如有必要使用高版本python，请提前设法安装。

>
	# gcc4.8.5可以编译通过
	sudo yum install gcc openssl-devel bzip2-devel libffi-devel
	cd /usr/src
	sudo wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz
	sudo tar xzf Python-3.8.2.tgz
	cd Python-3.8.2
	sudo ./configure --enable-optimizations
	sudo make altinstall
<
使用altinstall是为了避免覆盖系统默认的python命令。

make install: 安装编译Python，并且可能会创建或覆盖系统默认python链接(/usr/local/bin/python或/usr/local/bin/python3)
make altinstall: 安装编译python，安装到/usr/local/bin/python3.8

之后可以通过`whereis python3`, `whereis pip3`查看安装路径(/usr/local/bin/python3.8 /usr/local/bin/pip3.8)

此时如果直接运行`/usr/local/bin/pip3.8 install numpy`，可能会报
`pip._vendor.pep517.wrappers.BackendUnavailable`的错误
需要通过更新pip解决
>
	# 不加 --user，就需要sudo权限，最好加上--user
	/usr/local/bin/pip3.8 install -U pip --user
<

后续运行`/usr/local/bin/pip3.8 --version`显示
>
	WARNING: pip is being invoked by an old script wrapper. This will fail in a future version of pip
	Please see https://github.com/pypa/pip/issues/5599 for advice on fixing the underlying issue.
	To avoid this problem you can invoke Python with '-m pip' instead of running pip directly.
<

改用`python3.8 -m pip`安装scipy
>
	/usr/local/bin/python3.8 -m pip install scipy
<
----------------------------------------------------------------------------
*uv-pip*
*pip替代品uv* https://github.com/astral-sh/uv
缺点: 使用前一定要创建venv
安装 `pip install uv`

使用
>
	uv pip install flask                # Install Flask.
	uv pip install -r requirements.txt  # Install from a requirements.txt file.
	uv pip install -e .                 # Install the current project in editable mode.
	uv pip install "package @ ."        # Install the current project from disk
	uv pip install "flask[dotenv]"      # Install Flask with "dotenv" extra.
<
----------------------------------------------------------------------------
*pip批量升级所有package*
>
	pip install --upgrade --break-system-packages `pip list --outdated | tail -n +3 | cut -f1 --delimiter=' '`
<

*python-virtual-environment*

----------------------------------------------------------------
*mamba* *micromamba*

See:
https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html#mamba-org-releases

>bash
	curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
	./bin/micromamba shell init -s bash -p ~/micromamba

	micromamba activate  # this activates the base environment
	micromamba install python=3.6 jupyter -c conda-forge
<

升/降级python
micromamba install python=3.11

micromamba创建新环境，使用python3.10.6
>bash
	micromamba create -n myenv python=3.10.6
<

升级micromamba ~


碰到以下报错，则需添加conda-forge到channels
>
    critical libmamba No micromamba found in the loaded channels. Add 'conda-forge' to your config file.
<

>bash
    micromamba config append channels conda-forge
    micromamba self-update
<

----------------------------------------------------------------
Modern Python Package Manager ~

替代简单的requirements.txt

poetry vs. hatch vs. pdm vs. rye https://dev.to/adamghill/python-package-manager-comparison-1g98

*python-poetry* https://github.com/python-poetry/poetry
*hatch* https://hatch.pypa.io/latest/
*pdm*  https://pdm-project.org/latest/
*rye* https://github.com/astral-sh/rye

----------------------------------------------------------------
*tox* 测试工具  https://tox.readthedocs.io/en/latest/
----------------------------------------------------------------
*matplotlib-show报错*
>
	>>> plt.show()
	<stdin>:1: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown
<
*jupyter-qtconsole报错*

的解决方法均为
>
	pip install PyQt5
	# 或者
	pip install PyQt6
<
----------------------------------------------------------------
JUPYTER

*jupyter-qtconsole*
>
	pip install PyQt5 qtconsole
	# 或者
	pip install PyQt6 qtconsole
<

设置初始窗口、字体大小
>
	## The height of the console at start time in number
	#          of characters (will double with `vsplit` paging)
	#  Default: 25
	c.ConsoleWidget.console_height = 40

	## The width of the console at start time in number
	#          of characters (will double with `hsplit` paging)
	#  Default: 81
	c.ConsoleWidget.console_width = 75
	
	## The font size. If unconfigured, Qt will be entrusted
	#          with the size of the font.
	#  Default: 0
	c.ConsoleWidget.font_size = 18
<

基于 *jupyter-vim* https://github.com/jupyter-vim/jupyter-vim
>
	# 打开jupyter console
	:JupyterConsole
	# 或在命令行中打开jupyter qtconsole
	juypter qtconsole

	# 连接console或qtconsole
	:JupyterConnect
<

*jupyter-notebook*

基于 *jupyter-ascending* https://github.com/imbue-ai/jupyter_ascending

必须要求notebook version 6，暂不支持version 7
`jupyter --version`可以查看notebook版本
>
	# 创建pair notebook
	:JupyterAscendingOpenPairNotebook
<

*ipython*

使用vim-slime时，在terminal中使用：`ipython --no-autoindent` 防止自动缩进

========================================================================
setup.py ~


