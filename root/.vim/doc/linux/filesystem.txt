vim:ft=help

lsblk -f
查看所有存储设备。可以判断哪个设备挂载到哪个挂载点、哪个设备没有挂载。
>
    NAME   FSTYPE   FSVER LABEL UUID                                 FSAVAIL FSUSE% MOUNTPOINTS
    sda
    ├─sda1 ext4     1.0         xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    ├─sda2 swap     1           xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    └─sda3 ext4     1.0         xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx    1.2T    24% /usr2
    sdb
    └─sdb1 ext4     1.0         xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx     41G    86% /var/snap/firefox/common/host-hunspell
                                                                                    /
    sdc
    └─sdc1 ext4     1.0         xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  773.1G    85% /usr3
    sdd
    └─sdd1 ext4     1.0         xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx    6.5T     5% /usr4
<
*/etc/fstab* 定义系统启动时自动挂载的文件系统

===========================================
XFS对比EXT4 ~

http://xiaqunfeng.cc/2017/07/06/XFS-vs-EXT4/

LVM，Logical Volume Manager，逻辑卷管理器 ~

在 Linux 系统中，LVM（Logical Volume Manager，逻辑卷管理器）是一种用于管理硬盘驱动器的灵活方式，它允许系统管理员以更灵活和动态的方式来处理存储空间。LVM 通过将物理硬盘组合成卷组（Volume Groups），然后将卷组分割成逻辑卷（Logical Volumes），从而提供了一系列优点。

LVM 的主要组件包括：

1. 物理卷（Physical Volumes, PVs）：
   - 物理卷是 LVM 分区中的最小单位，可以是整个硬盘或者硬盘上的一个分区。物理卷是实际存储数据的地方。

2. 卷组（Volume Groups, VGs）：
   - 卷组是由两个或更多物理卷组成的集合，它们被组合在一起以提供更大的存储池。卷组跨越一个或多个物理硬盘，提供了一个统一的存储空间。

3. 逻辑卷（Logical Volumes, LVs）：
   - 逻辑卷是卷组中的一块区域，它被格式化并挂载以供文件系统使用。逻辑卷是用户实际使用的存储空间，可以被视为一个独立的硬盘。逻辑卷可以动态地调整大小，而不影响数据和文件系统。

LVM 的优点：

1. 灵活性：
   - 可以轻松地调整逻辑卷的大小，而不需要重新分区或复制数据。

2. 可扩展性：
   - 可以在线添加更多硬盘到卷组中，以扩展存储空间。

3. 性能：
   - 可以通过将数据分散到多个物理硬盘上来提高性能。

4. 数据保护：
   - LVM 支持快照功能，可以创建逻辑卷的即时副本，用于备份和恢复。

5. 简化管理：
   - 通过集中管理卷组和逻辑卷，简化了存储管理。

LVM 的操作命令 ~

- 创建物理卷：
  ```bash
  pvcreate /dev/sdb1
  ```

- 创建卷组：
  ```bash
  vgcreate myvg /dev/sdb1
  ```

- 创建逻辑卷：
  ```bash
  lvcreate -L 10G -n mylv myvg
  ```

- 格式化逻辑卷：
  ```bash
  mkfs.ext4 /dev/myvg/mylv
  ```

- 挂载逻辑卷：
  ```bash
  mount /dev/myvg/mylv /mnt/mylv
  ```

- 调整逻辑卷大小：
  ```bash
  lvextend -L +5G /dev/myvg/mylv
  ```

- 缩小逻辑卷：
  ```bash
  lvreduce -L 5G /dev/myvg/mylv
  ```

LVM 提供了一种高级的存储管理解决方案，适用于需要灵活和可扩展存储的服务器和工作站。

XFS 文件系统和 LVM ~

XFS 文件系统在 LVM 管理下是可以动态调整大小的，但是这种调整是单向的，即只能增加不能减少。这意味着，您可以很容易地使用 `lvextend` 和 `xfs_growfs` 命令来增加逻辑卷和文件系统的大小，但是不能缩小它们。

要增加 XFS 文件系统的大小，您可以按照以下步骤操作：

1. 确保有足够的空间在卷组中，您可以使用 `vgs` 命令查看卷组的可用空间。
2. 使用 `lvextend` 命令来增加逻辑卷的大小，例如：`lvextend -L +sizeG /dev/mapper/vg-lv`。
3. 然后，使用 `xfs_growfs` 命令来扩展文件系统以使用新分配的空间，例如：`xfs_growfs /dev/mapper/vg-lv`。

然而，如果您需要减小 XFS 文件系统的大小，这将涉及到更复杂的过程，因为 XFS 不支持在线缩小。您将需要：

1. 备份数据。
2. 卸载文件系统。
3. 使用 `lvreduce` 命令减小逻辑卷的大小（请注意，这可能会破坏数据）。
4. 重新格式化逻辑卷，这将删除所有数据：`mkfs.xfs /dev/mapper/vg-lv`。
5. 恢复数据（如果之前有备份）。

==================================
Linux 临时目录

df -h /tmp 查看是内存文件系统tmpfs，还是磁盘分区。
$TMPDIR  设置临时文件目录

==================================

*setgid.md*

文件系统访问控制列表 (ACL - Access Control Lists)

在/srv/shared_data目录下创建的文件，自动设置为组内共享，而非创建者私有 ~

>bash
    # -d 表示设置默认 ACL (default)
    # -m 表示修改 ACL (modify)
    # 组 (group) sharedgroup 的成员权限
    sudo setfacl -d -m g:sharedgroup:rwx /srv/shared_data
    # 文件所有者（user）权限
    sudo setfacl -d -m u::rwx /srv/shared_data
    # 其他人（other）权限
    sudo setfacl -d -m o::r-x /srv/shared_data
<

*查看目录ACL*
>bash
    getfacl /srv/shared_data
<

在
>
    -rw-rw-r--+ 1 user1 sharedgroup 0 Sep 17 20:25 user1_test_file.txt
<
当中，+标志表示启用了ACL

文件权限 ~

递归地将foo/文件夹下所有文件的group权限设为和当前用户权限相同

>bash
    # 递归设置所有子目录的权限
    # g=u: 先将组权限设置为与所有者权限相同 (通常是 rwx)。
    # g+s: 然后，为组添加 (+) setgid (s) 权限。这确保了所有子目录都成为有效的共享目录。
    find foo -type d -exec chmod g=u,g+s {} +
    # o=u: 先将其它人权限设置为与所有者权限相同 (通常是 rwx)。
    find foo -type d -exec chmod o=u,g+s {} +
    find foo -type d -exec chmod g=u,o=u,g+s {} +
    # 递归设置所有文件的权限
    find foo -type f -exec chmod g=u {} +
    find foo -type f -exec chmod o=u {} +
    find foo -type f -exec chmod g=u,o=u {} +
<
