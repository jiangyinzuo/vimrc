vim:ft=help
*command-line-tool*

命令行软件 vs 图形界面软件 ~

命令行软件
缺点:
	上手门槛高（但有望通过ChatGPT缓解）。
	不方便编辑、展示多媒体图形资源。
优点:
	软件和软件之间可以通过linux管道等方式组合使用，自由组合程度高。
	可以自动化批处理。
	更适合ChatGPT补全: ChatGPT时代，对命令行工具更友好。图形软件不会用，去问ChatGPT，还得按照GPT给出文字提示去找按钮。但如果是命令行工具的话，假设chatgpt给出的命令正确，就可以直接复制粘贴了。

-------------------------------------------------------------------------------

*the-art-of-command-line* https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md

*write-maintainable-command-line-tools*
https://github.com/jiangyinzuo/write-maintainable-command-line-tools

*tldr* 命令行帮助
*thefuck* 基于规则自动修正上一个命令的错误(too slow)

https://explainshell.com/
https://www.commands.dev/

*shellcheck*

https://github.com/koalaman/shellcheck#from-your-terminal

命令行运行shellcheck
>
    shellcheck myscript.sh
<
shellcheck也可以集成到CI中

-------------------------------------------------------------------------------

|view|是vim的只读模式
vim/less读取另一个程序的标准输出 >
    ls | vim -
    ls | view -
    ls | less
<

整个文件系统下搜索文件：locate，但是太慢，需要提前updatedb
Ubuntu22.04下均可通过apt安装  

命令行补全目录: .local/share/bash-completion/completions

*rename-command*
批量重命名: rename。rename有两个版本，
一种版本支持's/foo/bar/g'替换模式 (Ubuntu 23.10)，
另一种版本不支持。
>
    rename 's/opt-/hot-/g' *
<
<
    rename .ext .bak *.ext
>

计算器: *bc*
>
    echo "1.1+2.2" | bc
    echo "scale=2; 1.23456/2" | bc
<
或者直接`bc`进入交互模式
但很多时候不如 >
    python3 -c "print(1+1)"
    echo "print(1+1)" | python3
>
邮件: *himalaya* , 但其vim插件存在bug
目录树: tree

*进程查看top* top -> htop
top中按c可以查看command详情；u可以筛选user进程
>bash
    # 只看jiangyinzuo用户的进程
    top -u jiangyinzuo
<

查找: find -> fd                             *find-fd* *fd-find* *fd*
fd默认会ignore .gitignore下的文件，要取消.gitignore可以添加`-I`flag >
	fd -I data_v2.csv
<

Ubuntu18.04可以直接下载deb文件安装
https://github.com/sharkdp/fd/releases/download/v9.0.0/fd-musl_9.0.0_amd64.deb
sudo dpkg -i fd-musl_x.x.x_amd64.deb

模糊查找: |fzf|

递归删除当前文件夹下所有.o文件
>
	 find . -name "*.o" -type f -delete
<

-------------------------------------------------------------------------------
下载: wget -> axel  
git终端: lazygit, tig  
Linux文本处理: awk, sed -> sd/sad, cut |sed-command|

文本对比
diff comm
-------------------------------------------------------------------------------
*基于ssh协议的文件传输工具*

|rsync| |scp| |sftp| |git|

|netrw| 支持

*rsync本地目录同步到远程目录*
>
	rsync -avz --delete user@remote:/path/to/repo/ /local/path/to/repo
	# 把minuet-ai.nvim插件同步到远程服务器
	rsync -avz --delete  ./minuet-ai.nvim remote-macine:~/plugged

<
*rsync远程同步到本地*
>
	rsync -avz --delete user@remote:/path/to/repo/ /local/path/to/repo
<
-a 表示归档模式（保留权限等），-v 表示详细输出，-z 表示压缩数据
--delete: 同步被删除的文件

WARNING: 慎重使用--delete，因为它会删除本地目录中的文件
>
	# 这个命令会删除整个home目录！！！
	# 先用--dry-run检查一下
	rsync -avz --delete --dry-run site/ kiwi:~
<

例子:
>
	rsync -avz --delete --filter='dir-merge,- .gitignore' --exclude-from="$script_parent_dir/rsync-exclude-list.txt" "$host":gpudb-project-ictdb "$script_parent_dir/.."
<

--filter='dir-merge,- .gitignore' 表示无视.gitignore中的文件
--exclude-from="$script_parent_dir/rsync-exclude-list.txt" 表示无视
$script_parent_dir/rsync-exclude-list.txt中的文件, 文件格式应该同.gitignore

See: $VIMRC_ROOT/scripts/rsync-git

-------------------------------------------------------------------------------
*awk内置变量*
*awk-help*

https://www.runoob.com/linux/linux-comm-awk.html

$0 一行的内容
FILENAME 当前文件名
FS 字段分隔符（默认空格）
NF 一行的字段数目
NR 行号（从1开始）

awk设置分隔符的例子
>
	awk 'BEGIN {FS = ","} {print $1, $2}' filename
	awk -F, '{print $1, $2}' filename
	awk -F'[ \t]+' '{print $1, $2}' filename
<

ENDFILE {}   文件结束时执行
END {}       所有文件结束时执行
/---/,EOF {} 从---到EOF的内容

if (/---/)   如果匹配---，执行
-------------------------------------------------------------------------------
cat -> bat，Ubuntu下的命令叫batcat。能让fzf.vim的preview window变快。  

>
	sudo apt install bat
	batcat --version
<

pdf导出注释: pdfannots https://github.com/0xabu/pdfannots
pdf转text: pdftotext

json: jq
补全父目录 -> bd CentOS手动安装bd时，注意补全脚本名为/etc/bash_completion.d/bd-bash-completion.sh

-------------------------------------------------------------------------------
*file-explorer*

- Vim内部: |netrw|, coc-explorer, fern
- 命令行工具: ranger, lf, broot, vifm, nnn, yazi ⭐
fm脚本, vifm和nnn配置文件自v0.22.0后已删除，见历史版本 33971ca1627be8031dcb67ee6537387b9aa3acf9

-------------------------------------------------------------------------------
*image* 终端查看图片

- *timg*
>
	echo "set terminal png; plot sin(x);" | gnuplot | timg -pi -
	timg -pi kiga.jpg
<
- cmd.exe /c wezterm imgcat

*wezterm-ssh*
Sixel协议: 在WSL中，需要wezterm ssh root@172.22.240.192，才能让sixel协议生效
- img2sixel kiga.jpg

wayland:
- swayimg kiga.jpg (https://github.com/artemsen/swayimg)

X11:
- feh kiga.jpg
- sxiv kiga.jpg

uwberzug:
- https://github.com/jstkdng/ueberzugpp
- https://github.com/ueber-devel/ueberzug

*chafa* https://hpjansson.org/chafa/
- chafa kiga.jpg

-------------------------------------------------------------------------------

翻译 https://github.com/afc163/fanyi#error-spawn-festival-enoent

>bash
	sudo apt-get install festival festvox-kallpc16k
	npm i -g fanyi
<

格式化工具

|clang-format|

*neofetch* 查看系统信息
*onefetch* 查看git项目信息
https://github.com/o2sh/onefetch
https://onefetch.dev/

>bash
    cargo install onefetch
	onefetch --include-hidden
<

-------------------------------------------------------------------------------

|git-quick-stats| *统计代码行数*
>bash
	apt install git-quick-stats
<
*cloc* 统计代码行数
>bash
	cloc $(git ls-files)
	cloc .
<

显示当前用户登录状态 finger
对话框 dialog

*pptx*

ppt2md:
pip install ppt2md

extract-pptx.py

*dblp爬虫* 从dblp下载bibtex
>
	:r !dblp <paper title>
<
See also:
https://github.com/jiangyinzuo/dblp-api
https://github.com/jiangyinzuo/vimrc/wiki/Latex

*mklink* *mklinkd* WSL创建软链接文件

-------------------------------------------------------------------------------

*tmux使用vim编辑当前pane历史* CTRL-B CTRL-E
